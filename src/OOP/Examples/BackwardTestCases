# Test Cases 1
Class A Extends B {a,b;m(c){c};}
Class B Extends Object {d,e;m1(a){this.d+a} m2(b){b-1};}
End

# Int Float [2, 1.2]/[1.3, 2] √
[1, 1.1]
# True False [false, true] √
[true, false]
# Char 'b' √
'a'
# String “124”/“12”/“1234”/“” √
“123”
# EmptyString ""/"123" √
""
# Var Let 4/2 √
let a = 1 in a + 2
# Letrec App Fix Lam Parens 24 √
letrec fac =
    \n => case n of
        1 => 1
        | x => x * (fac (x-1))
in fac 3
# Case √
let f =
    \n => case n of
        true => true
        | false => false
in f true
# TCons [3]/[3,4,5]/[] √
[1, 2]
# TNil [1,2]/[] √
[]
# Tuple2 (3,4) √
(1,2)
# Tuple3 (4,5,6) √
(1,2,3)
# Ref DeRef 4 √
let a = ref 3 in
    !a
# Assign Seq 5 √
let a = ref 3 in
    a := 4; !a
# Unit  _ √
unit
# Field [5,6]√
let x = new A([1,2,3,4]) in
[x.e, x.b]
# Invk 4√
let x = new A([1,2,3,4]) in
(x->m1) 2
# Invk 1√
let x = new A([1,2,3,4]) in
(x->m2) 3
# New new A([5,6,7,8]) √
new A([1,2,3,4])
# BPrim √
1.1+2 <-4.2
3.2-1.5 <-2.3
4.2*2.3 <-10.88
4.2/1.1 <-3.5
1.1+2 <-4
3.2-1.5 <-2
4.2*2.3 <-10
4.2/1.1 <-3
...
# UPrim [true, -10] √
[~true, -9]
# Html "green" 124 √
Html.div [["color", "blue"]] [] ["123"]
# ToStr [1,2,3,4] √
Html.div [] [] [(toString [1,2,3])]