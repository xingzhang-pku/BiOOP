Class Canva Extends Object{
    title: Ref<String>, shapes: List<Shape>;
    setTitle(title){
        this.title:=title
    };
}
Class Shape Extends Object {
    bw: String, bh: String, 
    top: String, left: String, 
    id: String, color: Ref<String>;
    setColor(color){
        this.color:=color
    };
}

Class Circle Extends Shape {
    x: String, y: String, r1: String;
}

Class Square Extends Circle {}

Class Rect Extends Square {
    r2: String;
}

Class Polygon Extends Shape {
    points: String;
}

tableColor = ref "";;
tableBorder=new Polygon([ "200px", "200px", "200px", "200px"
                        , "table", ref ""
                        , "73,0 203,0 127,101 0,101"]);;
table = new Polygon([ "200px", "200px", "200px", "200px"
                    , "table", tableColor
                    , "75,0 200,0 125,100 0,100"]);;
rect = new Rect([ "200px", "100px", "300px", "200px"
                , "rect", tableColor
                , "0", "0", "125px", "50px"]);;
triangle = new Polygon( [ "100px", "100px", "200px", "300px"
                        , "tri", tableColor
                        , "100,0 100,50 50,50"]);;
phone =new Rect([ "100px", "100px", "250px", "250px"
                , "phone", ref "", "0", "0", "60px", "25px"]);;
screen = new Square([ "100px", "100px", "252px", "255px"
                    , "screen", ref "", "0", "0", "20px"]);;
keyboard=new Circle(["100px", "100px", "252px", "280px"
                    , "screen", ref "", "10", "10", "10px"]);;

canva = new Canva([ ref "", 
                    [ rect
                    , triangle
                    , tableBorder
                    , table
                    , phone
                    , screen
                    , keyboard]]);;

main =  (table->setColor) "brown";
        (phone->setColor) "gold";
        (screen->setColor) "black";
        (keyboard->setColor) "white";
        (canva->setTitle) "Picture";
        canva;;

-- Template
        ( "Canva"
        , "new Canva([title, shapes])"
        , """Html.div [] [] [ Html.script [] [] [
                                "function startDrag(event){
                                    event.dataTransfer.setData('shape', event.target.id);
                                    event.dataTransfer.setData('startx', event.clientX);
                                    event.dataTransfer.setData('starty', event.clientY);
                                };
                                function allowDrag(event){
                                    event.preventDefault();
                                };"
                            ]
                            , Html.script [] [] [
                                "function drop(event){
                                    event.preventDefault();
                                    var x = event.clientX - event.dataTransfer.getData('startx');
                                    var y = event.clientY - event.dataTransfer.getData('starty');
                                    var target = event.dataTransfer.getData('shape');
                                    var shape = document.getElementById(target).firstElementChild;
                                    var left = shape.style.left;
                                    var top = shape.style.top;
                                    shape.style.left = parseInt(left.substring(0, left.length-2)) + x;
                                    shape.style.top = parseInt(top.substring(0, top.length-2)) + y;
                                };"
                            ]
                            , Html.div [] [] [title]
                            , Html.div  [ ["height", "600px"]
                                        , ["width", "600px"]
                                        ] 
                                        [ ["ondragover", "allowDrag(event)"]
                                        , ["ondrop", "drop(event)"]
                                        ] 
                                        shapes
                            ]"""),

        ( "Circle"
        , "new Circle([bw, bh, top, left, id, color, x, y, r1])"
        , """Html.div   [] 
                        [ ["draggable", "true"]
                        , ["id", id]
                        , ["ondragstart", "startDrag(event)"]] 
                        [ Html.svg  [ ["position", "absolute"]
                                    , ["top", top]
                                    , ["left", left]
                                    ] 
                                    [ ["width", bw]
                                    , ["height", bh]
                                    ] 
                                    [ Html.circle   [] 
                                                    [ ["cx", x]
                                                    , ["cy", y]
                                                    , ["r", r1]
                                                    , ["fill", color]
                                                    ] 
                                                    []
                                    ]
                        ]"""),

        ( "Square"
        , "new Square([bw, bh, top, left, id, color, x, y, r1])"
        , """Html.div   [] 
                        [ ["draggable", "true"]
                        , ["id", id]
                        , ["ondragstart", "startDrag(event)"]] 
                        [ Html.svg  [ ["position", "absolute"]
                                    , ["top", top]
                                    , ["left", left]
                                    ] 
                                    [ ["width", bw]
                                    , ["height", bh]
                                    ] 
                                    [ Html.rect [] 
                                                [ ["x", x]
                                                , ["y", y]
                                                , ["width", r1]
                                                , ["height", r1]
                                                , ["fill", color]
                                                ] 
                                                []
                                    ]
                        ]"""),

        ( "Rect"
        , "new Rect([bw, bh, top, left, id, color, x, y, r1, r2])"
        , """Html.div   [] 
                        [ ["draggable", "true"]
                        , ["id", id]
                        , ["ondragstart", "startDrag(event)"]] 
                        [ Html.svg  [ ["position", "absolute"]
                                    , ["top", top]
                                    , ["left", left]
                                    ] 
                                    [ ["width", bw]
                                    , ["height", bh]
                                    ] 
                                    [ Html.rect [] 
                                                [ ["x", x]
                                                , ["y", y]
                                                , ["width", r1]
                                                , ["height", r2]
                                                , ["fill", color]
                                                ] 
                                                []
                                    ]
                        ]"""),

        ( "Polygon"
        , "new Polygon([bw, bh, top, left, id, color, points])"
        , """Html.div   [] 
                        [ ["draggable", "true"]
                        , ["id", id]
                        , ["ondragstart", "startDrag(event)"]] 
                        [ Html.svg  [ ["position", "absolute"]
                                    , ["top", top]
                                    , ["left", left]
                                    ] 
                                    [ ["width", bw]
                                    , ["height", bh]
                                    ] 
                                    [ Html.polygon  [] 
                                                    [ ["points", points]
                                                    , ["fill", color]
                                                    ] 
                                                    []
                                    ]
                        ]""")