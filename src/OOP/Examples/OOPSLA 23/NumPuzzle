Class JComponent Extends Object {}

Class JFrame Extends Container {
    height:String, 
    width:String, 
    title:Ref<String>, 
    members:Ref<List<JComponent>>, 
    containers:Ref<List<Container>>;

    setMembers(members){
        this.members:=members
    };
    setContainers(members){
        this.containers:=members
    };
    setTitle(title){
        this.title:=title ++ "..?"
    };
}

Class JLabel Extends JComponent {
    height:String, 
    width:String, 
    bgcolor:String, 
    left:String, 
    top: String, 
    text:Ref<String>;

    setText(text){
        this.text:=text++"..."
    };
}

Class AbstractButton Extends JComponent {
    left:String, 
    top:String, 
    height:String, 
    width:String;
}

Class JDialog Extends Container {
    title:Ref<String>, 
    hint:String, 
    id:String;

    setTitle(title){
        this.title:=title ++ ">>>"
    };
}

Class PuzzleBtn Extends AbstractButton {
    hint:String, 
    id:String, 
    onclick:String;
}


btnHint =   [ ("1", [1, 3])
            , ("2", [0, 2, 4])
            , ("3", [1, 5])
            , ("4", [0, 4, 6])
            , ("5", [1, 3, 5, 7])
            , ("6", [2, 4, 8])
            , ("7", [3, 7])
            , ("8", [4, 6, 8])
            , (" ", [5, 7])];;

checkScript = 
    letrec concatScript =
        \hint =>
            \i => 
                case hint of
                    [] => ""
                    | (h, ns) :: h1 :: hs =>
                        "(document.getElementById('b" 
                        ++ (toString i) 
                        ++ "').innerHTML == '" 
                        ++ h 
                        ++ "') && " 
                        ++ (concatScript (h1 :: hs) (i + 1))
                    | (h, ns) :: hs =>
                        "(document.getElementById('b" 
                        ++ (toString i) 
                        ++ "').innerHTML == '" 
                        ++ h 
                        ++ "')"
    in 
    "if(" ++ (concatScript btnHint 0) 
    ++ "){document.getElementById('dialog').removeAttribute('hidden');}" ;;

getClickScript =
    letrec getScript =
        \neighbors =>
            \i =>
                case neighbors of
                    n :: ns => "if(document.getElementById('b" 
                                ++ (toString n) 
                                ++ "').innerHTML == ' '){"
                                ++ "document.getElementById('b" 
                                ++ (toString n) 
                                ++ "').innerHTML " 
                                ++ "= document.getElementById('b" 
                                ++ (toString i) 
                                ++ "').innerHTML;"
                                ++ "document.getElementById('b" 
                                ++ (toString i) 
                                ++ "').innerHTML = ' ';}"
                                ++ (getScript ns i)
                    | [] => ""
    in getScript;;

btns = 
    letrec getBtn =
        \hint =>
            \i =>
                case hint of
                    [] => []
                    | (h, ns) :: hs =>
                        let 
                            l = 
                                (i - 3 * (i // 3)) * 70 + 70
                        in 
                        let 
                            t = 
                                (i // 3) * 70 + 70 
                        in
                        (new PuzzleBtn([((toString l) ++ "px")
                                    , ((toString t) ++ "px")
                                    , "50px"
                                    , "50px"
                                    , h
                                    , "b" ++ (toString i)
                                    ,   (getClickScript ns i) 
                                        ++ checkScript])) 
                        :: (getBtn hs (i + 1))
    in (getBtn btnHint 0);;

label = new JLabel([  "50px", "450px"
                    , "rgb(212,212,212)"
                    , "30px", "50px"
                    , ref "Click buttons besides the empty button to finish the puzzle."]);;

success = new JDialog([ref "Message", "Congratulations! You won.", "dialog"]);;

puzzle = new JFrame([ "500px", "500px"
                    , ref "Puzzle"
                    , ref ([label] ++ btns)
                    , ref [success]]);;

main = (puzzle->setTitle) "puzzle";
        (label->setText) "Click buttons besides the empty button to finish the puzzle.";
        puzzle;;
-----------------------------------------
        ( "JFrame"
        , "new JFrame([height, width, title, members, containers])"
        , """Html.div   [ ["height", height]
                        , ["width", width]
                        , ["margin", "auto"]
                        , ["border-style", "solid"]
                        , ["border-width", "medium"]
                        , ["border-color", "rgb(85, 154, 243)"]
                        , ["position", "relative"]
                        , ["background-color", "rgb(214, 214, 214)"]] 
                        [] 
                        [ Html.div  [ ["background-color", "rgb(85, 154, 243)"]
                                    , ["height", "25px"]] 
                                    [] 
                                    [title]
                        , Html.div [] [] members
                        , Html.div [] [] containers]"""),

        ( "JLabel"
        , "new JLabel([height, width, bgcolor, left, top, text])"
        , """Html.div   [ ["height", height]
                        , ["width", width]
                        , ["background-color", bgcolor]
                        , ["margin-left", left]
                        , ["margin-right", "auto"]
                        , ["margin-top", top]
                        , ["margin-bottom", "auto"]
                        , ["text-align", "left"]]
                        []
                        [text]"""),

        ( "JDialog"
        , "new JDialog([title, hint, id])"
        , """Html.div   [ ["height", "150px"]
                        , ["width", "200px"]
                        , ["margin", "auto auto auto auto"]
                        , ["border-style", "solid"]
                        , ["border-width", "medium"]
                        , ["border-color", "rgb(85, 154, 243)"]
                        , ["position", "relative"]
                        , ["background-color", "rgb(214, 214, 214)"]] 
                        [ ["id", id]
                        , ["hidden", ""]]
                        [ Html.div  [ ["background-color", "rgb(85, 154, 243)"]
                                    , ["height", "25px"]] 
                                    [] 
                                    [title]
                        , Html.div [] [["id", id ++ "hint"]] [hint]
                        , Html.button [] [["id", id ++ "btn"]] ["Ok"]
                        , Html.script [] [] ["document.getElementById('" ++ id 
                            ++ "btn').addEventListener('click', function(){"
                            ++ "document.getElementById('" 
                            ++ id 
                            ++ "').setAttribute('hidden', true);})"
                        ]]"""),

        ( "PuzzleBtn"
        , "new PuzzleBtn([left, top, height, width, hint, id, onclick])"
        , """Html.div   [ ["margin-left", left]
                        , ["margin-right", "auto"]
                        , ["margin-top", top]
                        , ["margin-bottom", "auto"]
                        , ["position", "absolute"]]
                        []
                        [ Html.button [["height", height],  
                                    ["width", width]] 
                                    [["id", id], 
                                    ["onclick", onclick]] 
                                    [hint]]""")